package net.pkhapps.idispatch.core.auth.client.api.user;

import net.pkhapps.idispatch.core.auth.client.api.AuthenticationProcess;
import org.jetbrains.annotations.NotNull;

/**
 * Authentication process for authenticating human users. Two-factor authentication is possible.
 */
public interface UserAuthenticationProcess extends AuthenticationProcess<AuthenticatedUserSession> {

    /**
     * Checks if two-factor authentication is required. If it is, then both a
     * {@linkplain #setUserPassword(String) user password} and a
     * {@linkplain #setOneTimePassword(String) one time password} must be supplied before the user can be authenticated.
     * If two-factor authentication is not required, only the {@linkplain #setUserPassword(String) user password}
     * must be supplied.
     *
     * @return true if two-factor authentication is required, false if not
     */
    boolean requiresTwoFactorAuthentication();

    /**
     * Sets the user's personal password to use during authentication. This is always required.
     *
     * @param password the password
     */
    void setUserPassword(@NotNull String password);

    /**
     * Sets a one-time password generated by e.g. a mobile phone app or some other device. This is only needed
     * if {@linkplain #requiresTwoFactorAuthentication() two-factor authentication} is required.
     *
     * @param oneTimePassword the one-time password
     */
    void setOneTimePassword(@NotNull String oneTimePassword);
}
